module vending_machine(clk, rst, in, out, change);
  input clk, rst;
  input [1:0] in; // 5rs - 01, 10rs - 10
  output reg out;
  output reg [1:0] change;

  // State encoding
  parameter s0 = 2'b00;
  parameter s1 = 2'b01;
  parameter s2 = 2'b10;

  reg [1:0] p_state;
  reg [1:0] nxt_state;

  always @(posedge clk) begin
    if (rst == 1) begin
      p_state = s0;
      nxt_state = s0;
      out = 0;
      change = 0;
    end else begin
      p_state = nxt_state;

      case (p_state)
        s0: begin
          if (in == 2'b00) begin
            nxt_state = s0;
            out = 0;
            change = 0;
          end else if (in == 2'b01) begin
            nxt_state = s1;
            out = 0;
            change = 0;
          end else if (in == 2'b10) begin
            nxt_state = s2;
            out = 0;
            change = 0;
          end
        end

        s1: begin
          if (in == 2'b00) begin
            nxt_state = s0;
            out = 0;
            change = 2'b01; // 5rs change
          end else if (in == 2'b01) begin
            nxt_state = s2;
            out = 0;
            change = 0;
          end else if (in == 2'b10) begin
            nxt_state = s0;
            out = 1;
            change = 0;
          end
        end

        s2: begin
          if (in == 2'b00) begin
            nxt_state = s0;
            out = 0;
            change = 2'b10;
          end else if (in == 2'b01) begin
            nxt_state = s0;
            out = 1;
            change = 0;
          end else if (in == 2'b10) begin
            nxt_state = s0;
            out = 1;
            change = 2'b01;
          end
        end
      endcase
    end
  end
endmodule
